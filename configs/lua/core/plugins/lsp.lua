local pid = vim.fn.getpid()
local omnisharp_bin = "/path/to/omnisharp-repo/run"

local M = {
  "neovim/nvim-lspconfig",
  dependencies = {
    "onsails/lspkind-nvim",
    "Hoffs/omnisharp-extended-lsp.nvim",
    { "folke/neodev.nvim", config = true },
  },
  config = function()
    require"lspconfig".omnisharp.setup {
        cmd = { "dotnet", "/root/.local/share/nvim/mason/packages/omnisharp/OmniSharp.dll" },
        --cmd = { "dotnet", "/root/.local/share/nvim/mason/packages/omnisharp/OmniSharp.dll" },
	handlers = {
		["textDocument/definition"] = require('omnisharp_extended').handler,
	},
        enable_editorconfig_support = true,
        enable_ms_build_load_projects_on_demand = false,
        enable_roslyn_analyzers = false,
        organize_imports_on_format = false,
        enable_import_completion = false,
        sdk_include_prereleases = true,
        analyze_open_documents_only = false,
	on_attach = function(client)
		if client.name == "omnisharp" then
			client.server_capabilities.semanticTokensProvider = {
				full = vim.empty_dict(),
				legend = {
					tokenModifiers = { "static_symbol" },
					tokenTypes = {
						"comment",
						"excluded_code",
						"identifier",
						"keyword",
						"keyword_control",
						"number",
						"operator",
						"operator_overloaded",
						"preprocessor_keyword",
						"string",
						"whitespace",
						"text",
						"static_symbol",
						"preprocessor_text",
						"punctuation",
						"string_verbatim",
						"string_escape_character",
						"class_name",
						"delegate_name",
						"enum_name",
						"interface_name",
						"module_name",
						"struct_name",
						"type_parameter_name",
						"field_name",
						"enum_member_name",
						"constant_name",
						"local_name",
						"parameter_name",
						"method_name",
						"extension_method_name",
						"property_name",
						"event_name",
						"namespace_name",
						"label_name",
						"xml_doc_comment_attribute_name",
						"xml_doc_comment_attribute_quotes",
						"xml_doc_comment_attribute_value",
						"xml_doc_comment_cdata_section",
						"xml_doc_comment_comment",
						"xml_doc_comment_delimiter",
						"xml_doc_comment_entity_reference",
						"xml_doc_comment_name",
						"xml_doc_comment_processing_instruction",
						"xml_doc_comment_text",
						"xml_literal_attribute_name",
						"xml_literal_attribute_quotes",
						"xml_literal_attribute_value",
						"xml_literal_cdata_section",
						"xml_literal_comment",
						"xml_literal_delimiter",
						"xml_literal_embedded_expression",
						"xml_literal_entity_reference",
						"xml_literal_name",
						"xml_literal_processing_instruction",
						"xml_literal_text",
						"regex_comment",
						"regex_character_class",
						"regex_anchor",
						"regex_quantifier",
						"regex_grouping",
						"regex_alternation",
						"regex_text",
						"regex_self_escaped_character",
						"regex_other_escape",
					},
				},
				range = true,
			}
		end
	end,

    }
  end,
}

return M
